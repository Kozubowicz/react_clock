{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","time","Date","timerId","this","setInterval","setState","console","info","toUTCString","slice","prevProps","name","props","debug","clearInterval","className","React","Component","getRandomName","value","now","toString","App","hasClock","clockName","hander1","document","addEventListener","event","preventDefault","handeler2","window","ReactDOM","render","getElementById"],"mappings":"sNAYaA,EAAb,4MACEC,MAAQ,CACNC,KAAM,IAAIC,MAFd,EAKEC,QAAe,KALjB,uDAOE,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CAAEL,KAAM,IAAIC,OAC1BK,QAAQC,KAAK,EAAKR,MAAMC,KAAKQ,cAAcC,OAAO,IAAK,MACtD,OAXP,gCAcE,SAAmBC,GACjB,IAAQC,EAASR,KAAKS,MAAdD,KAEJD,EAAUC,OAASA,GACrBL,QAAQO,MAAR,uBAA8BH,EAAUC,KAAxC,eAAmDA,MAlBzD,kCAsBE,WACEG,cAAcX,KAAKD,WAvBvB,oBA0BE,WACE,IAAQF,EAASG,KAAKJ,MAAdC,KAER,OACE,sBAAKe,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGZ,KAAKS,MAAMD,OAGb,YAED,sBAAMI,UAAU,cAAhB,SACGf,EAAKQ,cAAcC,OAAO,IAAK,YAtC1C,GAA2BO,IAAMC,WCFjC,SAASC,IACP,IAAMC,EAAQlB,KAAKmB,MAAMC,WAAWZ,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMG,EAAb,4MACEvB,MAAQ,CACNwB,UAAU,EACVC,UAAW,WAHf,EAeEC,QAAU,WACRC,SAASC,iBAAiB,eAAe,SAACC,GACxCA,EAAMC,iBACN,EAAKxB,SAAS,CAAEkB,UAAU,QAlBhC,EAsBEO,UAAY,kBAAMJ,SAASC,iBAAiB,SAAS,WACnD,EAAKtB,SAAS,CAAEkB,UAAU,QAvB9B,uDAME,WAA2B,IAAD,OACxBpB,KAAKsB,UACLtB,KAAK2B,YAELC,OAAO3B,aAAY,WACjB,EAAKC,SAAS,CAAEmB,UAAWN,QAC1B,QAZP,oBA0BE,WACE,MAAgCf,KAAKJ,MAA7ByB,EAAR,EAAQA,UAAWD,EAAnB,EAAmBA,SAEnB,OACE,sBAAKR,UAAU,MAAf,UACE,6CACCQ,GAAY,cAAC,EAAD,CAAOZ,KAAMa,WAhClC,GAAyBR,IAAMC,WCb/Be,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.c3871ad3.chunk.js","sourcesContent":["/* eslint-disable no-console */\n\nimport React from 'react';\n\ntype State = {\n  time: Date\n};\n\nexport interface ClockProps {\n  name: string\n}\n\nexport class Clock extends React.Component <ClockProps, State> {\n  state = {\n    time: new Date(),\n  };\n\n  timerId: any = null;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({ time: new Date() });\n      console.info(this.state.time.toUTCString().slice(-12, -4));\n    }, 1000);\n  }\n\n  componentDidUpdate(prevProps: ClockProps) {\n    const { name } = this.props;\n\n    if (prevProps.name !== name) {\n      console.debug(`Renamed from ${prevProps.name} to ${name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n  }\n\n  render() {\n    const { time } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {this.props.name}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {time.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","/* eslint-disable no-console */\nimport React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\ntype State = {\n  hasClock: boolean\n  clockName: string\n};\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component <{}, State> {\n  state = {\n    hasClock: true,\n    clockName: 'Clock-0',\n  };\n\n  componentDidMount(): void {\n    this.hander1();\n    this.handeler2();\n\n    window.setInterval(() => {\n      this.setState({ clockName: getRandomName() });\n    }, 3300);\n  }\n\n  hander1 = () => {\n    document.addEventListener('contextmenu', (event: MouseEvent) => {\n      event.preventDefault();\n      this.setState({ hasClock: false });\n    });\n  };\n\n  handeler2 = () => document.addEventListener('click', () => {\n    this.setState({ hasClock: true });\n  });\n\n  render(): React.ReactNode {\n    const { clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock name={clockName} /> }\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}